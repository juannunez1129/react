[{"/Users/juannunez/react/todo/src/index.js":"1","/Users/juannunez/react/todo/src/reportWebVitals.js":"2","/Users/juannunez/react/todo/src/Components/Todo.jsx":"3","/Users/juannunez/react/todo/src/context.js":"4","/Users/juannunez/react/todo/src/reducer.js":"5","/Users/juannunez/react/todo/src/Components/TodoForm.jsx":"6"},{"size":908,"mtime":1613163865636,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1613114655314,"results":"9","hashOfConfig":"8"},{"size":1487,"mtime":1613170037868,"results":"10","hashOfConfig":"8"},{"size":324,"mtime":1613169984231,"results":"11","hashOfConfig":"8"},{"size":1719,"mtime":1613171931915,"results":"12","hashOfConfig":"8"},{"size":952,"mtime":1613171610161,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"tuv1r9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/juannunez/react/todo/src/index.js",[],["29","30"],"/Users/juannunez/react/todo/src/reportWebVitals.js",[],"/Users/juannunez/react/todo/src/Components/Todo.jsx",["31"],"import react, { useContext } from 'react'\nimport TodosContext from '../context'\n\nexport default function Todo(){\nconst { state,dispatch } = useContext(TodosContext);\nconst title = state.todos.length > 0 ? `${state.todos.length} Todos` : \"Nothing to do today!\"\n\nreturn (\n    <div className=\"container mx-auto max-w-md text-center font-mono\">\n        <h1 className = \"text-bold\">{title}</h1>\n        <ul className = \"list-reset text-black p-0\">\n            {state.todos.map(todo => (\n                <li key = {todo.id} className = \"flex items-center bg-orange-dark border-black border-dashed border-2 my-2 py-4\">\n                    <span \n                    onDoubleClick={() => dispatch({ type: \"TOGGLE_TODO\", payload: todo })} \n                    className ={`flex-1 m1-12 cursor-pointer ${todo.complete && \"line-through text-grey-darkest\"}`}>{todo.text}</span>\n                <button\n                    onClick={()=> dispatch({ type: \"SET_CURRENT_TODO\", payload: todo})}\n                >\n                <img src=\"https://img.icons8.com/android/24/000000/edit.png\" alt= \"Edit icon\" className = \"h-6\"/>\n                </button>\n\n                <button\n                    onClick = {() => dispatch({ type: \"REMOVE_TODO\", payload: todo})}\n                >\n                    <img src=\"https://img.icons8.com/ios/100/000000/delete-sign--v1.png\" alt= \"Delete icon\" className = \"h-6\"/>\n                </button>\n\n                </li>\n            ))}\n        </ul>\n    </div>\n);\n}","/Users/juannunez/react/todo/src/context.js",[],"/Users/juannunez/react/todo/src/reducer.js",[],"/Users/juannunez/react/todo/src/Components/TodoForm.jsx",["32","33"],"import react, {useContext, useEffect, useState} from 'react'\nimport TodosContext from '../context'\n\nexport default function TodoForm(){\n    const [todo, setTodo] = useState(\"\");\n    const { state: { currentTodo = {} }, dispatch } = useContext (TodosContext);\n\n    useEffect(() => {\n        if (currentTodo.text){\n            setTodo(currentTodo.text)\n        }\n    }, [currentTodo.id])\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (currentTodo.text){\n            dispatch({ type: \"UPDATE_TODO\", payload: todo })\n        } else{\n        dispatch({ type: \"ADD_TODO\", payload: todo})\n        }\n        setTodo(\"\");\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className = \"flex justify-center p-5\">\n            <input type= \"text\" className=\"border-black border-solid border-2\" onChange = {event => setTodo(event.target.value)}\n            value = {todo}\n            />\n            \n        </form>\n    );\n}",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":12,"column":8,"nodeType":"44","endLine":12,"endColumn":24,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentTodo.text'. Either include it or remove the dependency array.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [currentTodo.id, currentTodo.text]",{"range":"51","text":"52"},[368,384],"[currentTodo.id, currentTodo.text]"]